export declare class WebfontLoader {
    type: string;
    key: string;
    state: number;
    loader: Phaser.Loader.LoaderPlugin;
    config: WebfontFontConfig;
    loaderOptions: WebfontLoaderConfig;
    constructor(loader: Phaser.Loader.LoaderPlugin, fontConfig: WebfontFontConfig, loaderOptions: WebfontLoaderConfig);
    load(): this;
    private checkLoadStatus;
    private loadFontWithFontFace;
    private loadFontLegacy;
    hasCacheConflict(): boolean;
    addToCache(): void;
    onProcess(): void;
}
export declare class WebFontLoaderPlugin extends Phaser.Plugins.BasePlugin {
    constructor(pluginManager: Phaser.Plugins.PluginManager);
}
declare type WebfontFontConfig = {
    font: string;
    url?: string;
    variants?: string[];
};
declare type WebfontLoaderConfig = {
    testString: string;
    legacyTimeout: number;
};
declare module 'phaser' {
    namespace Loader {
        interface LoaderPlugin {
            webfont(font: WebfontFontConfig | string, url?: string, options?: WebfontLoaderConfig): this;
        }
    }
}
export {};
